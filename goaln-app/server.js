// Generated by CoffeeScript 2.2.4
(function() {
  var Goal, User, app, config, cors, express, find_goals, find_user, get_users, mongoose, port, response, value;

  express = require('express');

  Goal = require('./db/Shemas.js').Goal;

  User = require('./db/Shemas.js').User;

  config = require('./config-server.js');

  mongoose = require('mongoose');

  cors = require('cors');

  app = express();

  find_user = function(id) {
    console.log('getting user num', id);
    return new Promise(function(resolve, reject) {
      return User.findOne({
        _id: id
      }, function(e, g) {
        resolve(g);
        if (e) {
          return reject(e);
        }
      });
    });
  };

  get_users = function() {
    console.log('getting users');
    return new Promise(function(resolve, reject) {
      User.find({}, function(e, g) {
        resolve(g);
        if (e) {
          reject(e);
        }
      });
    });
  };

  find_goals = function(ids) {
    console.log('getting goal num', ids);
    return new Promise(function(resolve, reject) {
      Goal.find({
        _id: {
          $in: ids
        }
      }, function(e, g) {
        if (e) {
          reject(e);
        }
        resolve(g);
      });
    });
  };

  app.use(function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
    res.header('Access-Control-Allow-Methods', 'POST, GET');
    next();
  });

  app.use(express.json());

  // to support JSON-encoded bodies
  app.use(express.urlencoded());

  // to support URL-encoded bodies
  app.get('/', function(req, res) {
    res.send('Hello World!');
  });

  value = null;

  response = null;

  app.get('/setlong', function(reqweb, resweb) {
    var valweb;
    valweb = reqweb.query.val;
    console.log('got setlong');
    if (response) {
      response.send(valweb);
      response = null;
      resweb.send(value);
    } else {
      resweb.send('NOthing');
    }
  });

  app.get('/long', function(req, res) {
    var val;
    console.log('got req');
    val = req.query.val;
    response = res;
    value = val;
    setTimeout((function() {
      if (response) {
        response.send('delay');
        response = null;
      }
    }), 6000);
  });

  app.get('/usergoals', function(req, res) {
    var u_id;
    u_id = req.query.id;
    //res.header("Access-Control-Allow-Origin", "*");
    //res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    return find_user(u_id).then(function(u) {
      console.log('got user', u);
      console.log('got name', u.fname);
      return find_goals(u.goal_ids);
    }).then(function(gs) {
      console.log('got goals', gs);
      return res.send(gs);
    });
  });

  app.get('/user', function(req, res) {
    var id;
    id = req.query.id;
    find_user(id).then(function(us) {
      res.send(us);
    }).catch(res.send);
  });

  app.get('/users', function(req, res) {
    var id;
    id = req.query.id;
    get_users().then(function(us) {
      res.send(us);
    }).catch(res.send);
  });

  app.get('/goals', function(req, res) {
    var id;
    id = req.query.id;
  });

  app.post('/newgoal', cors(), function(req, res) {
    var g, goal, name;
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
    res.header('Access-Control-Allow-Methods', 'GET, POST');
    name = req.body.name;
    g = req.body;
    goal = new Goal({
      title: g.title,
      desc: g.desc,
      deadline: g.date
    });
    goal.save().then(function(ng) {
      User.update({
        _id: g.id
      }, {
        $push: {
          goal_ids: ng._id
        }
      }, console.log);
      console.log(ng);
      res.send('OK');
    });
  });

  app.post('/comment', cors(), function(req, res) {
    var d, id;
    id = req.query.id;
    d = req.body;
    console.log('new comment', d);
    if (d.act === 'add') {
      Goal.update({
        _id: d.id
      }, {
        $push: {
          comments: {
            user_id: d.uid,
            text: d.text,
            date: d.date
          }
        }
      }, console.log);
      res.send('OK');
    }
  });

  app.post('/donegoal', cors(), function(req, res) {
    var id;
    id = req.query.id;
    Goal.update({
      _id: id,
      $set: {
        done: true
      }
    }, console.log);
    res.send('OK');
  });

  app.post('/donegoal', cors(), function(req, res) {
    var id;
    id = req.query.id;
    Goal.update({
      _id: id,
      $set: {
        done: true
      }
    }, console.log);
    res.send('OK');
  });

  console.log(config.db);

  mongoose.connect(config.db);

  port = 3030;

  app.listen(port, function() {
    console.log('Example app listening on port ' + port + '!');
  });

}).call(this);
